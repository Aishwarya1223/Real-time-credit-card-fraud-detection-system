# Instructions to Build and Push Docker Image to AWS ECR and Deploy to Lambda

## 1. Build the Docker Image
Use the Dockerfile to build an image named `sklearn-lambda`:
```
docker build -t sklearn-lambda .
```

## 2. Create an AWS ECR Repository
Create a container registry (Elastic Container Registry) on AWS:
```
aws ecr create-repository --repository-name sklearn-lambda
```

## 3. Authenticate Docker to AWS ECR
Login to your ECR repository (replace `<account-no>` with your AWS account number):
```
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <account-no>.dkr.ecr.us-east-1.amazonaws.com
```

## 4. Tag the Docker Image
Tag your image for pushing to ECR:
```
docker tag sklearn-lambda:latest <account-no>.dkr.ecr.us-east-1.amazonaws.com/sklearn-lambda
```

## 5. Push the Image to ECR
Push the Docker image to your ECR repository:
```
docker push <account-no>.dkr.ecr.us-east-1.amazonaws.com/sklearn-lambda
```

---

## Deploy the Image as AWS Lambda

### Create a New Lambda Function
```
aws lambda create-function   --function-name preprocess-deploy-lambda   --package-type Image   --code ImageUri=<account-no>.dkr.ecr.us-east-1.amazonaws.com/sklearn-lambda:latest   --role arn:aws:iam::<account-no>:role/service-role/data_preprocessor_predictor_function-role-2p5qn29z
```

### Update an Existing Lambda Function with a New Image
```
docker build -t sklearn-lambda .
docker tag sklearn-lambda:latest <account-no>.dkr.ecr.us-east-1.amazonaws.com/sklearn-lambda:latest
docker push <account-no>.dkr.ecr.us-east-1.amazonaws.com/sklearn-lambda:latest

aws lambda update-function-code   --function-name real-time-credit-card-transaction-processing-lambda   --image-uri <account-no>.dkr.ecr.us-east-1.amazonaws.com/sklearn-lambda:latest
```
